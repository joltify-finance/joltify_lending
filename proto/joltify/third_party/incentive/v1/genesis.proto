syntax = "proto3";
package joltify.third_party.incentive.v1;

import "gogoproto/gogo.proto";
import "joltify/third_party/incentive/v1/claims.proto";
import "joltify/third_party/incentive/v1/params.proto";
import "google/protobuf/timestamp.proto";

// import "cosmos/base/v1beta1/coin.proto";
// import "cosmos/base/v1beta1/coins.proto";

option go_package = "github.com/joltify-finance/joltify_lending/x/third_party/incentive/types";

option (gogoproto.goproto_getters_all) = false;

// AccumulationTime stores the previous reward distribution time and its corresponding collateral type
message AccumulationTime {
  string collateral_type = 1;

  google.protobuf.Timestamp previous_accumulation_time = 2 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
}

// GenesisRewardState groups together the global state for a particular reward so it can be exported in genesis.
message GenesisRewardState {
  repeated AccumulationTime accumulation_times = 1
      [(gogoproto.castrepeated) = "AccumulationTimes", (gogoproto.nullable) = false];

  repeated MultiRewardIndex multi_reward_indexes = 2
      [(gogoproto.castrepeated) = "MultiRewardIndexes", (gogoproto.nullable) = false];
}

// GenesisState is the state that must be provided at genesis.
message GenesisState {
  Params params = 1 [(gogoproto.nullable) = false];

  GenesisRewardState jolt_supply_reward_state = 2 [(gogoproto.nullable) = false];

  GenesisRewardState jolt_borrow_reward_state = 3 [(gogoproto.nullable) = false];

  GenesisRewardState swap_reward_state = 4 [(gogoproto.nullable) = false];

  repeated JoltLiquidityProviderClaim jolt_liquidity_provider_claims = 5
      [(gogoproto.castrepeated) = "JoltLiquidityProviderClaims", (gogoproto.nullable) = false];

  repeated SwapClaim swap_claims = 6 [
    (gogoproto.castrepeated) = "SwapClaims",
    (gogoproto.nullable) = false
  ];
}
