syntax = "proto3";
package joltify.third_party.jolt.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";

option go_package = "github.com/joltify-finance/joltify_lending/x/third_party/jolt/types";

// Msg defines the jolt Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  // Deposit defines a method for depositing funds to jolt liquidity pool.
  rpc Deposit(MsgDeposit) returns (MsgDepositResponse);
  // Withdraw defines a method for withdrawing funds from jolt liquidity pool.
  rpc Withdraw(MsgWithdraw) returns (MsgWithdrawResponse);
  // Borrow defines a method for borrowing funds from jolt liquidity pool.
  rpc Borrow(MsgBorrow) returns (MsgBorrowResponse);
  // Repay defines a method for repaying funds borrowed from jolt liquidity pool.
  rpc Repay(MsgRepay) returns (MsgRepayResponse);
  // Liquidate defines a method for attempting to liquidate a borrower that is over their loan-to-value.
  rpc Liquidate(MsgLiquidate) returns (MsgLiquidateResponse);
}

// MsgDeposit defines the Msg/Deposit request type.
message MsgDeposit {
  option (cosmos.msg.v1.signer) = "depositor";
  option (amino.name)           = "joltify.third_party.jolt.v1beta1.MsgDeposit";
  string   depositor                       = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated cosmos.base.v1beta1.Coin amount = 2
      [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
}

// MsgDepositResponse defines the Msg/Deposit response type.
message MsgDepositResponse {}

// MsgWithdraw defines the Msg/Withdraw request type.
message MsgWithdraw {
  option (cosmos.msg.v1.signer) = "depositor";
  option (amino.name)           = "joltify.third_party.jolt.v1beta1.MsgWithdraw";
  string   depositor                       = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated cosmos.base.v1beta1.Coin amount = 2
      [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
}

// MsgWithdrawResponse defines the Msg/Withdraw response type.
message MsgWithdrawResponse {}

// MsgBorrow defines the Msg/Borrow request type.
message MsgBorrow {
  option (cosmos.msg.v1.signer) = "borrower";
  option (amino.name)           = "joltify.third_party.jolt.v1beta1.MsgBorrow";
  string   borrower                        = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated cosmos.base.v1beta1.Coin amount = 2
      [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
}

// MsgBorrowResponse defines the Msg/Borrow response type.
message MsgBorrowResponse {}

// MsgRepay defines the Msg/Repay request type.
message MsgRepay {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name)           = "joltify.third_party.jolt.v1beta1.MsgRepay";
  string   sender                          = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string   owner                           = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated cosmos.base.v1beta1.Coin amount = 3
      [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
}

// MsgRepayResponse defines the Msg/Repay response type.
message MsgRepayResponse {}

// MsgLiquidate defines the Msg/Liquidate request type.
message MsgLiquidate {
  option (cosmos.msg.v1.signer) = "keeper";
  option (amino.name)           = "joltify.third_party.jolt.v1beta1.MsgLiquidate";
  string keeper   = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string borrower = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgLiquidateResponse defines the Msg/Liquidate response type.
message MsgLiquidateResponse {}
