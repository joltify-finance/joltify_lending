syntax = "proto3";
package joltify.spv;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/joltify-finance/joltify_lending/x/spv/types";

message Pool_info {
  string index  =1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string pool_name = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  int32 linked_project = 3 ;
  bytes owner_address     = 4
  [(cosmos_proto.scalar) = "cosmos.AddressBytes",
    (gogoproto.casttype)  = "github.com/cosmos/cosmos-sdk/types.AccAddress"
  ];


  string            apy      = 5 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];

  string            total_amount      = 6 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];


  int32 pay_freq = 7;

  string            reserve_factor      = 8 [
    (cosmos_proto.scalar)  = "cosmos.Dec",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];


  string            pool_nFT_class      = 9 [
    (cosmos_proto.scalar)  = "cosmos.Class",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/x/nft.Class",
    (gogoproto.nullable)   = false
  ];

  google.protobuf.Timestamp pool_start_time = 10 [(gogoproto.nullable) = false, (gogoproto.stdtime) = true];
}

message PoolWithInvestors {
  string poolIndex =1;
  repeated string investors    = 2;
}