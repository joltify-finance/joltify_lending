syntax = "proto3";
package joltify.spv;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/joltify-finance/joltify_lending/x/spv/types";

// Msg defines the Msg service.
service Msg {
  rpc CreatePool(MsgCreatePool) returns (MsgCreatePoolResponse);
  // this line is used by starport scaffolding # proto/tx/rpc
  rpc AddInvestors(MsgAddInvestors) returns (MsgAddInvestorsResponse);

  rpc Deposit(MsgDeposit) returns (MsgDepositResponse);

  rpc Borrow(MsgBorrow) returns (MsgBorrowResponse);
}

message MsgCreatePool {
  string creator = 1;
  int32 project_index = 2;
  string pool_name=3;
  string apy = 4;
  string pay_freq = 5;
  cosmos.base.v1beta1.Coin target_token_amount = 6[(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
}

message MsgCreatePoolResponse {
  string poolIndex = 1;
}

message MsgAddInvestors {
  string creator = 1;
  string pool_index = 2;
  repeated string investor_iD= 3;
}

message MsgAddInvestorsResponse {
  bool operationResult = 1;
}


message MsgDeposit {
  string creator = 1;
  string poolIndex = 2;
  string investorID = 3;
  cosmos.base.v1beta1.Coin token = 4[
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false];
}

message MsgDepositResponse {
}
message MsgBorrow {
  string creator = 1;
  string pool_index = 2;
  cosmos.base.v1beta1.Coin borrow_amount= 3[
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false];
}

message MsgBorrowResponse {
}
