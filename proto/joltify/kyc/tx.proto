syntax = "proto3";
package joltify.kyc;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "joltify/kyc/params.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";

// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/joltify-finance/joltify_lending/x/kyc/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  rpc UploadInvestor (MsgUploadInvestor) returns (MsgUploadInvestorResponse);
  rpc CreateProject (MsgCreateProject) returns (MSgCreateProjectResponse);
}
message MsgUploadInvestor {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name)           = "joltify.spv.MsgAddInvestors";
  option (gogoproto.goproto_getters) = false;
  string creator       = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string investorId    = 2;
  repeated string walletAddress = 3;
}

message MsgUploadInvestorResponse {
  repeated string wallets = 1;
}

message MsgCreateProject {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name)           = "joltify.spv.MsgCreatePool";
  option (gogoproto.goproto_getters) = false;
  string creator       = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string encoded_project= 2 ;
}

message MSgCreateProjectResponse {
  string project_id = 1;
}
