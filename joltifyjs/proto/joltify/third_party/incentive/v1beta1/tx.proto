syntax = "proto3";
package joltify.third_party.incentive.v1beta1;

import "gogoproto/gogo.proto";

option go_package = "github.com/joltify-finance/joltify_lending/x/third_party/incentive/types";

// Msg defines the incentive Msg service.
service Msg {
  // ClaimUSDXMintingReward is a message type used to claim USDX minting rewards
//  rpc ClaimUSDXMintingReward(MsgClaimUSDXMintingReward) returns (MsgClaimUSDXMintingRewardResponse);

  // ClaimJoltReward is a message type used to claim Hard liquidity provider rewards
  rpc ClaimJoltReward(MsgClaimJoltReward) returns (MsgClaimJoltRewardResponse);

  // ClaimDelegatorReward is a message type used to claim delegator rewards
//  rpc ClaimDelegatorReward(MsgClaimDelegatorReward) returns (MsgClaimDelegatorRewardResponse);

  // ClaimSwapReward is a message type used to claim delegator rewards
//  rpc ClaimSwapReward(MsgClaimSwapReward) returns (MsgClaimSwapRewardResponse);

  // ClaimSavingsReward is a message type used to claim savings rewards
//  rpc ClaimSavingsReward(MsgClaimSavingsReward) returns (MsgClaimSavingsRewardResponse);
}

// Selection is a pair of denom and multiplier name. It holds the choice of multiplier a user makes when they claim a
// denom.
message Selection {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string denom           = 1;
  string multiplier_name = 2;
}

// MsgClaimUSDXMintingReward message type used to claim USDX minting rewards
message MsgClaimUSDXMintingReward {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string sender          = 1;
  string multiplier_name = 2;
}

// MsgClaimUSDXMintingRewardResponse defines the Msg/ClaimUSDXMintingReward response type.
message MsgClaimUSDXMintingRewardResponse {}

// MsgClaimHardReward message type used to claim Hard liquidity provider rewards
message MsgClaimJoltReward {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string             sender          = 1;
  repeated Selection denoms_to_claim = 2 [(gogoproto.castrepeated) = "Selections", (gogoproto.nullable) = false];
}

// MsgClaimJoltRewardResponse defines the Msg/ClaimHardReward response type.
message MsgClaimJoltRewardResponse {}

// MsgClaimDelegatorReward message type used to claim delegator rewards
message MsgClaimDelegatorReward {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string             sender          = 1;
  repeated Selection denoms_to_claim = 2 [(gogoproto.castrepeated) = "Selections", (gogoproto.nullable) = false];
}

// MsgClaimDelegatorRewardResponse defines the Msg/ClaimDelegatorReward response type.
message MsgClaimDelegatorRewardResponse {}

// MsgClaimSwapReward message type used to claim delegator rewards
message MsgClaimSwapReward {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string             sender          = 1;
  repeated Selection denoms_to_claim = 2 [(gogoproto.castrepeated) = "Selections", (gogoproto.nullable) = false];
}

// MsgClaimSwapRewardResponse defines the Msg/ClaimSwapReward response type.
message MsgClaimSwapRewardResponse {}

// MsgClaimSavingsReward message type used to claim savings rewards
message MsgClaimSavingsReward {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string             sender          = 1;
  repeated Selection denoms_to_claim = 2 [(gogoproto.castrepeated) = "Selections", (gogoproto.nullable) = false];
}

// MsgClaimSavingsRewardResponse defines the Msg/ClaimSavingsReward response type.
message MsgClaimSavingsRewardResponse {}
