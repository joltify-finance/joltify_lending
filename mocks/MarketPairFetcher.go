// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	context "context"

	flags "github.com/joltify-finance/joltify_lending/app/flags"
	daemonstypes "github.com/joltify-finance/joltify_lending/daemons/types"

	mock "github.com/stretchr/testify/mock"

)

// MarketPairFetcher is an autogenerated mock type for the MarketPairFetcher type
type MarketPairFetcher struct {
	mock.Mock
}

// FetchIdMappings provides a mock function with given fields: _a0
func (_m *MarketPairFetcher) FetchIdMappings(_a0 context.Context) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for FetchIdMappings")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}



// Start provides a mock function with given fields: _a0, _a1, _a2
func (_m *MarketPairFetcher) Start(_a0 context.Context, _a1 flags.Flags, _a2 daemonstypes.GrpcClient) error {
	ret := _m.Called(_a0, _a1, _a2)

	if len(ret) == 0 {
		panic("no return value specified for Start")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, flags.Flags, daemonstypes.GrpcClient) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Stop provides a mock function with given fields:
func (_m *MarketPairFetcher) Stop() {
	_m.Called()
}

// NewMarketPairFetcher creates a new instance of MarketPairFetcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMarketPairFetcher(t interface {
	mock.TestingT
	Cleanup(func())
},
) *MarketPairFetcher {
	mock := &MarketPairFetcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
